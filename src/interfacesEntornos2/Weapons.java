package interfacesEntornos2;

import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.JOptionPane;

/**
 * Clase para crear una ventana de selección de armas.&nbsp;Con un título, un elemento ComboBox para seleccionar arma, un CheckBox para elegir modo fácil y dos botones(uno para continuar y otro para cerrar la aplicación).
 * @author Eric_
 * @version 1
 */
public class Weapons extends javax.swing.JFrame {
    
    /**
     * Constructor de la clase que inicializa los componentes, ubica la ventana en el centro de la pantalla y muestra un MessageDialog.
     */
    public Weapons() {
        initComponents();
        setLocationRelativeTo(this);
        JOptionPane.showMessageDialog(this, "You made Sans angry. Prepare to fight.");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jBExit = new javax.swing.JButton();
        JCBWeapons = new javax.swing.JComboBox<>();
        jCheckTrap = new javax.swing.JCheckBox();
        jBContinue = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());

        jLabel1.setFont(new java.awt.Font("Source Code Pro", 0, 28)); // NOI18N
        jLabel1.setText("SELECT A WEAPON");

        jBExit.setFont(new java.awt.Font("Source Code Pro Light", 0, 24)); // NOI18N
        jBExit.setText("EXIT");
        jBExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExitActionPerformed(evt);
            }
        });

        JCBWeapons.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sword", "Spear", "Axe", "Wand" }));

        jCheckTrap.setText("Easy Mode");

        jBContinue.setFont(new java.awt.Font("Source Code Pro Light", 0, 24)); // NOI18N
        jBContinue.setText("CONTINUE");
        jBContinue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBContinueActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(114, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(94, 94, 94))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(JCBWeapons, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jCheckTrap, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82))))
            .addGroup(layout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(jBContinue)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JCBWeapons, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jBContinue)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBExit)
                    .addComponent(jCheckTrap))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método que se ejecuta al hacer clic en el botón "EXIT" y termina la aplicación.
     * @param evt Acción que provoca la ejecución del método.
     */
    private void jBExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jBExitActionPerformed

    /**
     * Método que comprueba si el elemento CheckBox "jCheckTrap" está seleccionado, de ser así muestra un MessageDialog y cierra la aplicación.<br>
     * Muestra un MessageDialog con el arma seleccionada en el elemento ComboBox, abre la siguiente ventana y cierra esta.
     * @param evt Acción que provoca la ejecución del método.
     */
    private void jBContinueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBContinueActionPerformed
        if (jCheckTrap.isSelected()) {
            JOptionPane.showMessageDialog(this, "Easy mode? Chs weak.\n*Sans kills you*");
            System.exit(0);
        }
        else {
            String arma = JCBWeapons.getSelectedItem().toString();
            JOptionPane.showMessageDialog(this, "You have selected " + arma);
            Fight ventana = new Fight();
            ventana.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_jBContinueActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Weapons.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Weapons.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Weapons.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Weapons.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Weapons().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> JCBWeapons;
    private javax.swing.JButton jBContinue;
    private javax.swing.JButton jBExit;
    private javax.swing.JCheckBox jCheckTrap;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    /**
     * Método que cambia el icono predeterminado de la ventana por la imagen indicada.
     * @return La imagen seleccionada como icono de la ventana.
     */
    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
        getImage(ClassLoader.getSystemResource("img/sansface.png"));
        return retValue;
    }
    
}
