package interfacesEntornos2;

import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;

/**
 * Clase para crear una ventana de inicio de sesión inicial para la aplicación.&nbsp;Con un título, dos campos de texto, un menu desplegable que cambia el color de fondo y dos botones, uno de los botones empieza el juego de Sans y el otro lee los campos de texto para iniciar sesión o no.
 * @author Eric_
 * @version 1
 */
public class FPrincipal extends javax.swing.JFrame {

    /**
     * Entero privado que almacena el valor de "badSans".
     */
    private int badSans = 1;
    /**
     * Constructor de la clase que inicializa los componentes, llama al método initPopUpMenu() y ubica la ventana en el centro de la pantalla.
     */
    public FPrincipal() {
        initComponents();
        initPopUpMenu();
        setLocationRelativeTo(this);
    }
    
    /**
     * Inicializa el menú desplegable "jPUCambiaColor" con dos opciones: "Poner color azul" y "Poner color verde".<br><br>
     * Al seleccionar una de estas opciones, cambia el color de fondo "jPFondo" a un color específico.
     */
    public void initPopUpMenu(){
        JMenuItem color1 = new JMenuItem("Poner color azul");
        JMenuItem color2 = new JMenuItem("Poner color verde");
        jPUCambiaColor.add(color1);
        jPUCambiaColor.add(color2);
        jPFondo.setComponentPopupMenu(jPUCambiaColor);
        color1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                jPFondo.setBackground(new Color(204,255,255));
            }
        });
        color2.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                jPFondo.setBackground(new Color(204,255,217));
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPUCambiaColor = new javax.swing.JPopupMenu();
        jPFondo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tFUser = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tFPassword = new javax.swing.JPasswordField();
        jBLogin = new javax.swing.JButton();
        jBSans = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setIconImage(getIconImage());
        setIconImages(getIconImages());
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPFondo.setBackground(new java.awt.Color(204, 255, 217));

        jLabel1.setFont(new java.awt.Font("Source Code Pro Light", 0, 24)); // NOI18N
        jLabel1.setText("Welcome");

        jLabel2.setText("USER");

        jLabel3.setText("PASSWORD");

        tFPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tFPasswordKeyPressed(evt);
            }
        });

        jBLogin.setText("LOG IN");
        jBLogin.setFocusable(false);
        jBLogin.setName(""); // NOI18N
        jBLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLoginActionPerformed(evt);
            }
        });

        jBSans.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/sans.png"))); // NOI18N
        jBSans.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/img/badsans.png"))); // NOI18N
        jBSans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSansActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPFondoLayout = new javax.swing.GroupLayout(jPFondo);
        jPFondo.setLayout(jPFondoLayout);
        jPFondoLayout.setHorizontalGroup(
            jPFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPFondoLayout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(jPFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(12, 12, 12)
                .addGroup(jPFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jBLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tFUser)
                    .addComponent(tFPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(jBSans, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPFondoLayout.setVerticalGroup(
            jPFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPFondoLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tFUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tFPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPFondoLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jBLogin)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPFondoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addComponent(jBSans, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPFondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPFondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Este método verifica si el texto ingresado en los campos de usuario y contraseña son iguales a "alumno".<br><br>
     * Si es así, se crea una nueva ventana de "Login" y se hace visible, además se cierra la ventana actual.<br><br>
     * De lo contrario, se muestra un mensaje de error indicando que el acceso es incorrecto.
     * @param evt Acción que provoca la ejecución del método.
     */
    private void jBLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLoginActionPerformed
        if (tFUser.getText().equals("alumno") && tFPassword.getText().equals("alumno")) {
            Login ventana = new Login();
            ventana.setVisible(true);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Incorrect access", "Error", JOptionPane.ERROR_MESSAGE, null);
        }
    }//GEN-LAST:event_jBLoginActionPerformed

    /**
     * Este método controla si se pulsa la tecla "Enter".&nbsp;De ser así se activa el boton "Login".
     * @param evt El evento de KeyEvent que se produce al presionar una tecla en el campo de contraseña.
     */
    private void tFPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tFPasswordKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jBLogin.doClick();
        }
    }//GEN-LAST:event_tFPasswordKeyPressed

    /**
     * Método llamado cuando se cierra la ventana.&nbsp;Muestra un diálogo de confirmación antes de cerrar la aplicación.
     * @param evt Evento de cierre de la ventana.
     */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        String [] opciones = {"Accept", "Cancel"};
        int entrada = JOptionPane.showOptionDialog(this, "You really want to close?", "Confirm", 2, 3, null, opciones, opciones[1]);
        if (JOptionPane.OK_OPTION == entrada) {
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * Método que se ejecuta al hacer clic en el botón "Sans" y realiza una acción dependiendo del valor de "badSans".<br><br>
     * Las acciones según el valor són:<br>
     * - <code>badSans = 1</code> &nbsp;Muestra un MessageDialog de aviso.<br>
     * - <code>badSans = 2</code> &nbsp;Muestra un MessageDialog de último aviso.<br>
     * - <code>badSans = 3</code> &nbsp;Abre la ventana del JFrame "Weapons" y cierra esta ventana.
     * @param evt Acción que provoca la ejecución del método.
     */
    private void jBSansActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSansActionPerformed

        switch (badSans) {
            case 1:
                badSans++;
                JOptionPane.showMessageDialog(this, "Don't touch me", "SANS", 1);
                break;
            case 2:
                badSans++;
                JOptionPane.showMessageDialog(this, "DON'T TOUCH ME", "SANS", 1);
                break;
            default:
                Weapons ventana = new Weapons();
                ventana.setVisible(true);
                this.dispose();
                break;
        }
    }//GEN-LAST:event_jBSansActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBLogin;
    private javax.swing.JButton jBSans;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPFondo;
    private javax.swing.JPopupMenu jPUCambiaColor;
    private javax.swing.JPasswordField tFPassword;
    private javax.swing.JTextField tFUser;
    // End of variables declaration//GEN-END:variables

    /**
     * Método que cambia el icono predeterminado de la ventana por la imagen indicada.
     * @return La imagen seleccionada como icono de la ventana.
     */
    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
        getImage(ClassLoader.getSystemResource("img/sansface.png"));
        return retValue;
    }
    
}
